{
    "beforeSaveCustomScript": "name = feedbackFormID; // formula to replace the by espocrm autogenerated random sequence for a more logical case ID \n\n// adding a datetime closed at whenever the status of the case is closed.\nif(entity\\isAttributeChanged('status') && status == 'closed'){\n    datetimeClosed = datetime\\now()\n};\n\nif(entity\\isAttributeChanged('status') && status == 'in_progress'){\n    datetimeClosed = null;\n};\n\n// Calculate days difference betweeen creating and closing feedback\ndaysDifferenceBetweenCreatedClosed = datetime\\diff(datetimeClosed,createdAt,'hours')/24;\n\n\ndatetimeFeedbackCollectionStarted = ifThen(\n    datetimeFeedbackCollectionStartedRaw != null,\n    string\\replace(string\\substring(datetimeFeedbackCollectionStartedRaw, 0, 19), 'T', ' '),\n    null\n); // This line takes the first 19 characters from the raw datetime (removing milliseconds and timezone), replaces the 'T' with a space, and stores the result in datetimeFeedbackCollectionStarted in YYYY-MM-DD HH:MM:SS format.\n\ndatetimeFeedbackCollectionEnded = ifThen(\n    datetimeFeedbackCollectionEndedRaw != null,\n    string\\replace(string\\substring(datetimeFeedbackCollectionEndedRaw, 0, 19), 'T', ' '),\n    null\n); // This line takes the first 19 characters from the raw datetime (removing milliseconds and timezone), replaces the 'T' with a space, and stores the result in datetimeFeedbackCollectionStarted in YYYY-MM-DD HH:MM:SS format.\n\n// This line takes the first 19 characters from the raw datetime (removing milliseconds and timezone), replaces the 'T' with a space, and stores the result in datetimeFeedbackCollectionEnded in YYYY-MM-DD HH:MM:SS format.\ndatetimeReceivedByKoboToolboxServer = ifThen(\n    datetimeReceivedByKoboToolboxServerRaw != null,\n    string\\replace(string\\substring(datetimeReceivedByKoboToolboxServerRaw, 0, 19), 'T', ' '),\n    null\n); // This line takes the first 19 characters from the raw datetime (removing milliseconds and timezone), replaces the 'T' with a space, and stores the result in datetimeReceivedByKoboToolboxServer in YYYY-MM-DD HH:MM:SS format.\n\ndatetimeReceived = createdAt;\n\n\nifThen(\n   assignedUserId != null && status == 'open',             // // someone has been assigned or re-assigned and current status is 'Open'\n   status = 'in_progress'          // then set the status to 'In Progress'\n);\n\n// GPS data transformation\n$gpsParts = string\\split(gpsCoordinates, ' '); // Split the geopoint string into an array using a space as the separator\ngpsLatitude = array\\at($gpsParts, 0); // Extract the latitude (first part)\ngpsLongitude = array\\at($gpsParts, 1); // Extract the longitude (second part)\ngpsAltitude = array\\at($gpsParts, 2); // Extract the altitude (third part)\ngpsAccuracy = array\\at($gpsParts, 3); // Extract the accuracy (fourth part)\n\n// calculate the time it took to fill in a kobo form \nminutesDurationKoboForm = datetime\\diff(datetimeFeedbackCollectionEnded,datetimeFeedbackCollectionStarted, 'minutes');\n"
}